1.栈用于括号的匹配
    (1)初始设置一个空栈,顺序读入括号
    (2)若是右括号,则或者使置于栈顶的最急迫期待得意消解,或者使不合法的情况(括号不匹配)
    (3)若是左括号,则作为一个新的更急迫的期待压入栈
       原有的在栈中所有未消解的期待的急迫性降了一级
    (4)算法结束时,栈为空,否则括号序列不匹配
2.栈用于表达式求值
    (1)顺序扫描表达式的每一项
    (2)若该项是操作数,则将其压入栈中
    (3)若该项是操作符<op>,则连续从栈中退出两个操作数Y和X
    形成运算指令X<op>Y,并将计算结果重新压入栈中
    (4)当表达式的所有项都扫描并处理完成后,栈顶存放的就是最后的计算结果
3.栈用于递归
    (1)若在一个函数、过程或数据结构的定义中又应用了它自身,则称其为递归定义的,简称递归
    (2)递归通常把一个大型的复杂问题层层转化为一个与原问题相似的规模较小的问题来求解
    (3)递归策略减少了程序的代码量,但是效率并不太高
    斐波那契数列
    int Fib(int n ){
        if(n==0)
            return 0;
        else if(n==1){
            return 1;
        }
        else
            return Fib(n-1)+Fib(n-2);
    }
4.队列用于层次遍历
    逐层处理遍历
    (1)根节点入队
    (2)若队空(所有节点都已处理完毕),则结束遍历;否则重复(3)操作
    (3)队列中第一个节点出队,并访问之。若其有左孩子,则将左孩子入队;
       若其有右孩子,则将右孩子入队,返回(2)


1.C?D?  D缓冲区是用队列实现的 递归 进制转换 迷宫求解都是栈实现
2.B     
3.B?    C页面替换算法中的FIFO用到了队列，其余的都只用到了栈
4.B     
5.B
6.A     B
7.B
8.C
9.B?C?  B图的广度优先搜索和树的层序遍历都借助于队列
10.A    
11.A
12.B
13.A
